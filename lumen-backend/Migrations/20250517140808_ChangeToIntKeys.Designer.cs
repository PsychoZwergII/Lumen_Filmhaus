// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using lumen_backend.Data;

#nullable disable

namespace lumen_backend.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250517140808_ChangeToIntKeys")]
    partial class ChangeToIntKeys
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("lumen_backend.Models.Datum", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("DatumUhrzeit")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("FilmId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("FilmId");

                    b.ToTable("Vorstellungen");
                });

            modelBuilder.Entity("lumen_backend.Models.Film", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("FilmName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Filme");
                });

            modelBuilder.Entity("lumen_backend.Models.Reservation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<Guid>("FilmId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Sitzplaetze")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<Guid>("VorstellungId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("FilmId");

                    b.HasIndex("VorstellungId");

                    b.ToTable("Reservationen");
                });

            modelBuilder.Entity("lumen_backend.Models.Datum", b =>
                {
                    b.HasOne("lumen_backend.Models.Film", "Film")
                        .WithMany()
                        .HasForeignKey("FilmId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Film");
                });

            modelBuilder.Entity("lumen_backend.Models.Reservation", b =>
                {
                    b.HasOne("lumen_backend.Models.Film", "Film")
                        .WithMany()
                        .HasForeignKey("FilmId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("lumen_backend.Models.Datum", "Vorstellung")
                        .WithMany()
                        .HasForeignKey("VorstellungId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Film");

                    b.Navigation("Vorstellung");
                });
#pragma warning restore 612, 618
        }
    }
}
